name: CI

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --no-optional

      - run: xvfb-run -a pnpm test
        if: runner.os == 'Linux'
      - run: pnpm test
        if: runner.os != 'Linux'

  set-git-tag:
    runs-on: ubuntu-latest
    outputs:
      GIT_TAG: ${{ steps.set-tag.outputs.GIT_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set GIT_TAG
        id: set-tag
        run: |
          GIT_TAG=$(git describe --tags --abbrev=0)
          LATEST_COMMIT=$(git rev-list -n 1 $GIT_TAG)
          CURRENT_COMMIT=$(git rev-parse HEAD)
          if [ "$LATEST_COMMIT" = "$CURRENT_COMMIT" ]; then
            echo "::set-output name=GIT_TAG::${GIT_TAG}"
          else
            echo "::set-output name=GIT_TAG::"
          fi

  publish:
    needs: [set-git-tag, test]
    if: startsWith(needs.set-git-tag.outputs.GIT_TAG, 'v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --no-optional

      - name: Publish to Visual Studio Marketplace
        run: pnpm run publish:vs-marketplace
        env:
          VSCE_PAT: ${{ secrets.VS_MARKETPLACE_TOKEN }}

      - name: Publish to Open VSX Registry
        run: pnpm run publish:open-vsx -p ${{ secrets.OPEN_VSX_TOKEN }}

  release:
    needs: [set-git-tag, publish]
    if: startsWith(needs.set-git-tag.outputs.GIT_TAG, 'v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
